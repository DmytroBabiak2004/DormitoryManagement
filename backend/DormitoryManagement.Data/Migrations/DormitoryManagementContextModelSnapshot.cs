// <auto-generated />
using System;
using DormitoryManagement.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DormitoryManagement.Data.Migrations
{
    [DbContext(typeof(DormitoryManagementContext))]
    partial class DormitoryManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DormitoryManagement.Data.Models.Chair", b =>
                {
                    b.Property<int>("SerialNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNumber"));

                    b.Property<int>("ConditionId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("SerialNumber");

                    b.HasIndex("ConditionId");

                    b.HasIndex("RoomNumber");

                    b.HasIndex("TypeId");

                    b.ToTable("Chairs");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.ChairType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfChairType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChairTypes");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Mattress", b =>
                {
                    b.Property<int>("SerialNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNumber"));

                    b.Property<int>("ConditionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("SerialNumber");

                    b.HasIndex("ConditionId");

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Mattresses");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.MattressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfMattressType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MattressTypes");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<DateOnly?>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RegistrationId");

                    b.HasIndex("RoomNumber");

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Room", b =>
                {
                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NumberOfPlaces")
                        .HasColumnType("int");

                    b.HasKey("RoomNumber");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Student", b =>
                {
                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentNumber");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Table", b =>
                {
                    b.Property<int>("SerialNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNumber"));

                    b.Property<int>("ConditionId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("SerialNumber");

                    b.HasIndex("ConditionId");

                    b.HasIndex("RoomNumber");

                    b.HasIndex("TypeId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.TableType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfTableType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TableTypes");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Chair", b =>
                {
                    b.HasOne("DormitoryManagement.Data.Models.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.Room", "Room")
                        .WithMany("Chairs")
                        .HasForeignKey("RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.ChairType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condition");

                    b.Navigation("Room");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Mattress", b =>
                {
                    b.HasOne("DormitoryManagement.Data.Models.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.Student", "Student")
                        .WithOne("Mattress")
                        .HasForeignKey("DormitoryManagement.Data.Models.Mattress", "StudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.MattressType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condition");

                    b.Navigation("Student");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Registration", b =>
                {
                    b.HasOne("DormitoryManagement.Data.Models.Room", "Room")
                        .WithMany("Registrations")
                        .HasForeignKey("RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.Student", "Student")
                        .WithOne("Registration")
                        .HasForeignKey("DormitoryManagement.Data.Models.Registration", "StudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Table", b =>
                {
                    b.HasOne("DormitoryManagement.Data.Models.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.Room", "Room")
                        .WithMany("Tables")
                        .HasForeignKey("RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DormitoryManagement.Data.Models.TableType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condition");

                    b.Navigation("Room");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Room", b =>
                {
                    b.Navigation("Chairs");

                    b.Navigation("Registrations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("DormitoryManagement.Data.Models.Student", b =>
                {
                    b.Navigation("Mattress")
                        .IsRequired();

                    b.Navigation("Registration")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
